{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","speed","setSpeed","acceleration","setAcceleration","stability","setStability","manouverability","setManoueverability","comfort","setComfort","wheelSize","setWheelSize","wheelDuro","setWheelDuro","deckWidth","setDeckWidth","concave","setConcave","abec","setAbec","wheelSizes","label","value","wheelDuros","deckWidths","concaves","data","name","score","React","useEffect","accelerationValue","at","stabilityValue","manoueverabilityValue","comfortValue","Fragment","sm","Group","options","optionType","buttonStyle","onChange","e","target","BarChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","YAxis","domain","hide","Bar","fill","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bfbbd993.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Radio, Col } from \"antd\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\n\nfunction App() {\n  const [speed, setSpeed] = useState(0);\n  const [acceleration, setAcceleration] = useState(0);\n  const [stability, setStability] = useState(0);\n  const [manouverability, setManoueverability] = useState(0);\n  const [comfort, setComfort] = useState(0);\n  const [wheelSize, setWheelSize] = useState(6);\n  const [wheelDuro, setWheelDuro] = useState(4);\n  const [deckWidth, setDeckWidth] = useState(3);\n  const [concave, setConcave] = useState(2);\n  const [abec, setAbec] = useState(2);\n  const wheelSizes = [\n    { label: \"< 50mm\", value: 1 },\n    { label: \"50mm\", value: 2 },\n    { label: \"51mm\", value: 3 },\n    { label: \"52mm\", value: 4 },\n    { label: \"53mm\", value: 5 },\n    { label: \"54mm\", value: 6 },\n    { label: \"55mm\", value: 7 },\n    { label: \"56mm\", value: 8 },\n    { label: \"57mm\", value: 9 },\n    { label: \"58mm\", value: 10 },\n    { label: \"59mm\", value: 11 },\n    { label: \"60mm\", value: 12 },\n    { label: \"> 60mm\", value: 13 },\n  ];\n\n  const wheelDuros = [\n    { label: \"< 78a\", value: 1 },\n    { label: \"78a - 87a\", value: 2 },\n    { label: \"88a - 95a\", value: 3 },\n    { label: \"96a - 99a\", value: 4 },\n    { label: \"100a - 101a\", value: 5 },\n    { label: \"83b >\", value: 6 },\n  ];\n\n  const deckWidths = [\n    { label: '< 7.5\"', value: 1 },\n    { label: '7.5\"', value: 2 },\n    { label: '8\"', value: 3 },\n    { label: '8.25\"', value: 4 },\n    { label: '8.5\"', value: 5 },\n    { label: '8.75\"', value: 6 },\n    { label: '9\"', value: 7 },\n    { label: '9.5\"', value: 8 },\n    { label: '10\"', value: 9 },\n    { label: '>10\"', value: 10 },\n  ];\n\n  const concaves = [\n    { label: \"Flat\", value: 1 },\n    { label: \"Mellow\", value: 2 },\n    { label: \"Medium\", value: 3 },\n    { label: \"Steep\", value: 4 },\n  ];\n\n  const abecs = [\n    { label: \"ABEC 1\", value: 1 },\n    { label: \"ABEC 3\", value: 2 },\n    { label: \"ABEC 5\", value: 3 },\n    { label: \"ABEC 7\", value: 4 },\n    { label: \"ABEC 9\", value: 5 },\n  ];\n\n  const data = [\n    { name: \"Speed\", score: speed },\n    { name: \"Acceleration\", score: acceleration },\n    { name: \"Stability\", score: stability },\n    { name: \"Manoueverability\", score: manouverability },\n    { name: \"Comfort\", score: comfort },\n  ];\n\n  React.useEffect(() => {\n    const speedValue = wheelSize * 1.1 + wheelDuro + abec * 1.7;\n    setSpeed(speedValue);\n  }, [wheelSize, wheelDuro, abec]);\n\n  React.useEffect(() => {\n    const accelerationValue = (1 + wheelSizes.at(-1).value - wheelSize) * 2;\n    setAcceleration(accelerationValue);\n  }, [wheelSizes, wheelSize]);\n\n  React.useEffect(() => {\n    const stabilityValue = deckWidths.at(-1).value + deckWidth - concave * 2;\n    setStability(stabilityValue);\n  }, [deckWidth, concave, deckWidths]);\n\n  React.useEffect(() => {\n    const manoueverabilityValue =\n      concave * 2 + deckWidths.at(-1).value - deckWidth;\n    setManoueverability(manoueverabilityValue);\n  }, [deckWidth, concave, deckWidths]);\n\n  React.useEffect(() => {\n    const comfortValue =\n      (1+ wheelDuros.at(-1).value +\n      concaves.at(-1).value -\n      wheelDuro  -\n      concave) * 3;\n    setComfort(comfortValue);\n  }, [concave, wheelDuro, concaves, wheelDuros]);\n\n  return (\n    <React.Fragment>\n      <Col sm={24}>\n        Wheel Size\n        <br />\n        <Radio.Group\n          options={wheelSizes}\n          optionType=\"button\"\n          buttonStyle=\"solid\"\n          onChange={(e) => setWheelSize(e.target.value)}\n          value={wheelSize}\n        />\n      </Col>\n      <Col sm={24}>\n        Wheel Durometer\n        <br />\n        <Radio.Group\n          options={wheelDuros}\n          optionType=\"button\"\n          buttonStyle=\"solid\"\n          onChange={(e) => setWheelDuro(e.target.value)}\n          value={wheelDuro}\n        />\n      </Col>\n      <Col sm={24}>\n        Deck Width\n        <br />\n        <Radio.Group\n          options={deckWidths}\n          optionType=\"button\"\n          buttonStyle=\"solid\"\n          onChange={(e) => setDeckWidth(e.target.value)}\n          value={deckWidth}\n        />\n      </Col>\n      <Col sm={24}>\n        Concave\n        <br />\n        <Radio.Group\n          options={concaves}\n          optionType=\"button\"\n          buttonStyle=\"solid\"\n          onChange={(e) => setConcave(e.target.value)}\n          value={concave}\n        />\n      </Col>\n      <Col sm={24}>\n        Bearings ABEC\n        <br />\n        <Radio.Group\n          options={abecs}\n          optionType=\"button\"\n          buttonStyle=\"solid\"\n          onChange={(e) => setAbec(e.target.value)}\n          value={abec}\n        />\n      </Col>\n      <br />\n      <BarChart\n        width={800}\n        height={300}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <XAxis dataKey=\"name\" />\n        <YAxis domain={[0, 31]} hide />\n        <Bar dataKey=\"score\" fill=\"#8884d8\" />\n      </BarChart>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}